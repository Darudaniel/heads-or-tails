{"version":3,"sources":["components/Coin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Coin","state","data","results","fetchApi","a","fetch","response","json","setState","hash","Math","floor","random","handleClick","this","className","src","image","alt","name","console","log","onClick","type","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2SA0DeA,E,4MAtDbC,MAAQ,CACNC,KAAM,CACJC,QAAQ,K,EAWZC,S,sBAAW,8BAAAC,EAAA,sEACcC,MAAM,6CADpB,cACHC,EADG,gBAEUA,EAASC,OAFnB,OAEHN,EAFG,OAGT,EAAKO,SAAS,CACZP,KAAMA,EACNQ,KAAMC,KAAKC,MAAuB,EAAhBD,KAAKE,YALhB,2C,EASXC,YAAc,WACZ,EAAKL,SAAS,CACZC,KAAMC,KAAKC,MAAuB,EAAhBD,KAAKE,a,uDAnB3B,WACEE,KAAKX,a,gCAGP,c,oBAmBA,WACE,OACE,qCACE,sBAAKY,UAAU,iBAAf,UACE,wBAAQA,UAAU,kBAAlB,SAEID,KAAKd,MAAMC,KAAKC,QAAQY,KAAKd,MAAMS,MACnC,qBAAKM,UAAU,eAAeC,IAAKF,KAAKd,MAAMC,KAAKC,QAAQY,KAAKd,MAAMS,MAAMQ,MAAOC,IAAG,oBAAeJ,KAAKd,MAAMC,KAAKC,QAAQY,KAAKd,MAAMS,MAAMU,QAC9IC,QAAQC,IAAI,4BAIhB,qBAAKN,UAAU,iBAAf,SAEID,KAAKd,MAAMC,KAAKC,QAAQY,KAAKd,MAAMS,MACnC,oBAAIM,UAAU,cAAd,SAA6BD,KAAKd,MAAMC,KAAKC,QAAQY,KAAKd,MAAMS,MAAMU,OACtEC,QAAQC,IAAI,gCAIlB,wBAAQN,UAAU,SAASO,QAASR,KAAKD,YAAaU,KAAK,SAA3D,8B,GAjDWC,IAAMC,W,MCQVC,MARf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,OCMSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dd7f7cb5.chunk.js","sourcesContent":["import React from 'react'\nimport '../assets/styles/Coin.css'\n\nclass Coin extends React.Component {\n  state = {\n    data: {\n      results:[],\n    },\n  }\n  componentDidMount() {\n    this.fetchApi()\n  }\n\n  componentDidUpdate() {\n\n  }\n\n  fetchApi = async() => {\n    const response = await fetch('https://rickandmortyapi.com/api/character')\n    const data = await response.json()\n    this.setState({\n      data: data,\n      hash: Math.floor((Math.random() * 2))\n    })\n  }\n\n  handleClick = () => {\n    this.setState({\n      hash: Math.floor((Math.random() * 2))\n    })\n  }\n\n  render() {\n    return(\n      <>\n        <div className=\"coin-container\">\n          <figure className=\"image-container\">\n          {\n              this.state.data.results[this.state.hash] ?\n              <img className=\"image-result\" src={this.state.data.results[this.state.hash].image} alt={`Imagen de ${this.state.data.results[this.state.hash].name}`}/> :\n              console.log('no veas la consola bro')\n            }\n            \n          </figure>\n          <div className=\"text-container\">\n            {\n              this.state.data.results[this.state.hash] ?\n              <h2 className=\"name-result\">{this.state.data.results[this.state.hash].name}</h2>:\n              console.log('concentrate en el juego')\n            }\n          </div>\n        </div>\n        <button className=\"button\" onClick={this.handleClick} type=\"button\">GOOD LUCK</button>\n      </>      \n    )\n  }\n}\n\nexport default Coin","import Coin from './components/Coin'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Coin />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}