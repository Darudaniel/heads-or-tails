{"version":3,"sources":["components/Loader.jsx","components/Coin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","animationIn","animationInDuration","isVisible","Coin","useState","apiData","setApiData","hash","setHash","loading","setLoading","getData","a","fetch","response","json","data","useEffect","src","results","image","alt","name","onClick","Math","floor","random","setTimeout","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mTAmBeA,EAdA,kBACb,qBAAKC,UAAU,SAAf,SACE,cAAC,WAAD,CAAUC,YAAY,WAAWC,oBAAoB,MAAMC,WAAW,EAAtE,SACE,qBAAKH,UAAU,aAAf,SACE,qBAAKA,UAAU,wBCmDRI,EAxDF,WAAO,IAAD,EAEaC,mBAAS,IAFtB,mBAEVC,EAFU,KAEDC,EAFC,OAGOF,mBAAS,GAHhB,mBAGVG,EAHU,KAGJC,EAHI,OAIaJ,oBAAS,GAJtB,mBAIVK,EAJU,KAIDC,EAJC,KAMXC,EAAO,uCAAG,8BAAAC,EAAA,sEACSC,MAAM,6CADf,cACRC,EADQ,gBAEKA,EAASC,OAFd,OAERC,EAFQ,OAGdV,EAAWU,GACXN,GAAW,GAJG,2CAAH,qDAuBb,OAJAO,qBAAU,WACRN,MACC,IAGD,qCACE,sBAAKZ,UAAU,iBAAf,UACE,wBAAQA,UAAU,kBAAlB,SACGU,EACC,cAAC,EAAD,IACA,qBACEV,UAAU,eACVmB,IAAKb,EAAQc,QAAQZ,GAAMa,MAC3BC,IAAG,oBAAehB,EAAQc,QAAQZ,GAAMe,UAI9C,qBAAKvB,UAAU,iBAAf,SACIU,EAEA,oBAAIV,UAAU,cAAd,SACE,sBAAKA,UAAU,2BAAf,UAA0C,wBAAW,wBAAW,wBAAW,6BAF7E,oBAAIA,UAAU,cAAd,SAA6BM,EAAQc,QAAQZ,GAAMe,YAOzD,wBAAQvB,UAAU,SAASwB,QAlCX,WAClBb,GAAW,GAJXF,EAAQgB,KAAKC,MAAuB,EAAhBD,KAAKE,WAMzBC,YAAW,WACTjB,GAAW,KACV,MA6BgDkB,KAAK,SAAtD,2B,MC3CSC,MARf,WACE,OACE,qBAAK9B,UAAU,MAAf,SACE,cAAC,EAAD,OCKS+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f8e0fb67.chunk.js","sourcesContent":["import React from 'react'\nimport '../assets/styles/Loader.css'\nimport {Animated} from \"react-animated-css\";\n\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Animated animationIn=\"rotateIn\" animationInDuration=\"600\" isVisible={true}>\n      <div className=\"lds-circle\">\n        <div className=\"loader-child\" >\n\n        </div>\n      </div>\n    </Animated>\n  </div>\n  \n\n)\n\nexport default Loader","import React, { useState, useEffect } from 'react'\nimport '../assets/styles/Coin.css'\nimport Loader from './Loader'\n\nconst Coin = () => {\n  \n  const [apiData, setApiData] = useState({})\n  const [hash, setHash] = useState(1)\n  const [loading, setLoading] = useState(true)\n\n  const getData = async () => {\n    const response = await fetch('https://rickandmortyapi.com/api/character')\n    const data = await response.json()\n    setApiData(data)\n    setLoading(false)\n  }\n  \n  const randomizeHash = () => {\n    setHash(Math.floor((Math.random() * 2)))\n  }\n  \n  const handleClick = () => {\n    setLoading(true)\n    randomizeHash()\n    setTimeout(() => {\n      setLoading(false)\n    }, 700)\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  return (\n    <>\n      <div className=\"coin-container\">\n        <figure className=\"image-container\">\n          {loading ?\n            <Loader /> :\n            <img \n              className=\"image-result\" \n              src={apiData.results[hash].image} \n              alt={`Imagen de ${apiData.results[hash].name}`}\n            />\n          }\n        </figure>\n        <div className=\"text-container\">\n          {!loading ?             \n            <h2 className=\"name-result\">{apiData.results[hash].name}</h2>:\n            <h2 className=\"name-result\">\n              <div className=\"lds-ellipsis name-loader\"><div></div><div></div><div></div><div></div></div>\n            </h2>\n          }\n        </div>\n      </div>\n      <button className=\"button\" onClick={handleClick} type=\"button\">GOOD LUCK</button>\n    </>\n  )\n}\n\nexport default Coin\n","import Coin from './components/Coin'\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Coin />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}